{"mappings":"0iBACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAKC,EAAKH,GAC3BG,KAAOD,EACPL,OAAOC,eAAeI,EAAKC,EAAK,CAC5BH,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGdJ,EAAIC,GAAOH,EAEf,OAAOE,C,MCfEK,E,aAAPC,GAAOD,EAMZ,CALCE,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,wBACnCE,EAAAd,EAAA,CAHWQ,EAGX,aAAYG,SAASC,cAAc,uBACnCE,EAAAd,EAAA,CAJWQ,EAIX,SAAQG,SAASC,cAAc,yBAC/BE,EAAAd,EAAA,CALWQ,EAKX,MAAKG,SAASC,cAAc,0BALjBJ,GAQbC,EAAKC,KAAKK,iBAAiB,SAI3B,SAAuBC,GACrBC,EAASD,EAAIE,OAAOC,MAAQH,EAAIE,OAAOjB,K,IAJzCQ,EAAKC,KAAKK,iBAAiB,UAQ3B,SAAkBC,GAChBA,EAAII,iBACJ,IAAMC,EAAwBJ,EAAxBK,MAAOC,EAAiBN,EAAjBM,KAAMC,EAAWP,EAAXO,OAEfC,EAAW,EAEfJ,EAAQK,OAAOL,GAEDM,YAAW,SAASC,IAsBpC,IAAuBC,EAAUP,EArBzBG,IAAaC,OAAOF,MAqBLK,EAlBnBJ,GAAY,EAkBiBH,EAhBLD,EAiBX,IAAIS,SAAQ,SAACC,EAASC,GACnC,IAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAS,CACbP,WACAP,SAEEW,EACFF,EAAQK,GAERJ,EAAOI,E,GAERd,IA5BEe,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUP,EAAKgB,EAALhB,MACjBR,EAAAyB,GAASC,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANpB,EAAM,M,IAGvEqB,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAUP,EAAKgB,EAALhB,MAClBR,EAAAyB,GAASC,OAAOI,QAAQ,sBAAuCF,OAAfb,EAAS,QAAYa,OAANpB,EAAM,M,IAIzED,GAASK,OAAOH,GAENI,WAAWC,EAASP,G,GAC7BA,E,IAjCL,IAAMJ,EAAW,E","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/js/03-promises.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  firstDelay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btn: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('input', onInputChange);\nrefs.form.addEventListener('submit', onSubmit);\n\nconst formData = {};\nfunction onInputChange(evt) {\n  formData[evt.target.name] = evt.target.value;\n  // console.log(formData);\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let { delay, step, amount } = formData;\n\n  let position = 0;\n\n  delay = Number(delay);\n\n  let timerId = setTimeout(function restart() {\n    if (position === Number(amount)) {\n      return;\n    }\n    position += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += Number(step);\n\n    timerId = setTimeout(restart, delay);\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  const promis = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    const resalt = {\n      position,\n      delay,\n    };\n    if (shouldResolve) {\n      resolve(resalt);\n    } else {\n      reject(resalt);\n    }\n  }, delay);\n\n  return promis;\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["Object","defineProperty","$cec85eba0a352189$exports","value","default","obj","key","enumerable","configurable","writable","$ce04d3a99e08e73b$var$_obj","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","$parcel$interopDefault","addEventListener","evt","$ce04d3a99e08e73b$var$formData","target","name","preventDefault","delay1","delay","step","amount","position1","Number","setTimeout","restart","position","Promise","resolve","reject","shouldResolve","Math","random","resalt","then","param","$6JpON","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.8c648575.js.map"}