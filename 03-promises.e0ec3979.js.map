{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCC,WAAYF,SAASC,cAAc,sBACnCE,OAAQH,SAASC,cAAc,wBAC/BG,IAAKJ,SAASC,cAAc,0BAG9BH,EAAKC,KAAKM,iBAAiB,SAI3B,SAAuBC,GACrBC,EAASD,EAAIE,OAAOC,MAAQH,EAAIE,OAAOE,K,IAJzCZ,EAAKC,KAAKM,iBAAiB,UAQ3B,SAAkBC,GAChBA,EAAIK,iBACJ,IAAMC,MAAAC,EAAKC,KAAEA,EAAIX,OAAEA,GAAWI,EAE1BQ,EAAW,EAEfF,EAAQG,OAAOH,GAEf,IAAII,EAAUC,YAAW,SAASC,IAsBpC,IAAuBC,EAAUR,EArBzBG,IAAaC,OAAOb,KAGxBY,GAAY,GAkBOK,EAhBLL,EAgBeH,EAhBLC,EAiBX,IAAIQ,SAAQ,CAACC,EAASC,KACnC,MAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAS,C,SACbP,E,MACAR,GAEEY,EACFF,EAAQK,GAERJ,EAAOI,EAAO,GAEff,IA5BEgB,MAAK,EAACR,SAAEA,EAAQR,MAAEA,MACjBiB,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAqBX,QAAiBR,MAAU,IAGzEoB,OAAM,EAACZ,SAAEA,EAAQR,MAAEA,MAClBiB,EAAAjC,GAASkC,OAAOG,QAAQ,sBAAoBb,QAAiBR,MAAU,IAI3EC,GAASG,OAAOF,GAEhBG,EAAUC,WAAWC,EAASN,G,GAC7BA,E,IAjCL,MAAMN,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  firstDelay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btn: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('input', onInputChange);\nrefs.form.addEventListener('submit', onSubmit);\n\nconst formData = {};\nfunction onInputChange(evt) {\n  formData[evt.target.name] = evt.target.value;\n  // console.log(formData);\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let { delay, step, amount } = formData;\n\n  let position = 0;\n\n  delay = Number(delay);\n\n  let timerId = setTimeout(function restart() {\n    if (position === Number(amount)) {\n      return;\n    }\n    position += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += Number(step);\n\n    timerId = setTimeout(restart, delay);\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  const promis = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    const resalt = {\n      position,\n      delay,\n    };\n    if (shouldResolve) {\n      resolve(resalt);\n    } else {\n      reject(resalt);\n    }\n  }, delay);\n\n  return promis;\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstDelay","amount","btn","addEventListener","evt","$47d4ff9957288465$var$formData","target","name","value","preventDefault","delay","delay1","step","position1","Number","timerId","setTimeout","restart","position","Promise","resolve","reject","shouldResolve","Math","random","resalt","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e0ec3979.js.map"}